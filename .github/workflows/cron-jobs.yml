# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Checks for changes in cron-jobs folder
      - name: Check cron-jobs folder
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            cron-jobs:
              - 'cron-jobs/**'

      # Reads version number from package.json and saves to environment variable
      - name: Get latest version
        run: |
          LATEST_VERSION=$(grep "version" package.json | cut -d \" -f 4-4)
          echo $LATEST_VERSION

      # Logs-in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Builds and pushes minibid cron jobs
      - name: Build and push cron jobs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfiles/cron-jobs
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/minibid-cron-jobs:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/minibid-cron-jobs:${{ LATEST_VERSION }}
